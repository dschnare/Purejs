/*
 Module: xport
 Author: Darren Schnare
 Keywords: javascript,export
 License: MIT ( http://www.opensource.org/licenses/mit-license.php )
 Repo: https://github.com/dschnare/project-template
*/
function h(a,c,f){a=a?a.toString():"";f||(f="object"!==typeof window?{}:window);var a=a.split("."),b=a.length,d=f,e,g;for(e=0;e<b-1;e+=1)g=a[e],void 0===d[g]&&(d[g]={}),d=d[g];g=a[b-1];d[g]=c;return f}
h("module",function(a,c,f){var b,d,e;2==arguments.length&&(f=c,c=a,a=[],"function"!==typeof c&&(c=function(a){return function(){return a}}(c)));if("function"===typeof define&&"object"===typeof define.a&&define.a)0===a.length?define(c):define(a,c);else if("object"===typeof exports&&exports&&"function"===typeof require){if(0===a.length)b=c();else{b=[];for(d=a.length;0<d;)d-=1,b.unshift(require(a[d]));b=c.apply(void 0,b)}if(b)for(e in b)b.hasOwnProperty(e)&&(exports[e]=b[e])}else"function"===typeof f&&
f()},h);h("xport",h);

/*
 Author: Darren Schnare
 Keywords: Keywords: javascript,constructor,inheritence,mixin,pure,type,testing
 License: MIT ( http://www.opensource.org/licenses/mit-license.php )
 Repo: https://github.com/dschnare/purejs
*/
(function(){function n(a){var q=arguments.length,c,b,e;if(!a)throw Error("Expected at least one object as an argument.");for(c=1;c<q;c+=1)if(e=arguments[c],l(e))for(b in e)e.hasOwnProperty(b)&&(a[b]=e[b]);return a}function g(a){return null===a?"null":k(a)?"array":typeof a}function m(a){return a&&"object"===typeof a}function k(a){return a instanceof r||"[object Array]"===s.prototype.toString.call(a)||l(a)&&p(a.length)&&i(a.push)}function l(a){return null!==a&&void 0!==a}function i(a){return"function"===
typeof a}function p(a){return"number"===typeof a||a instanceof t}function o(a){return"string"===typeof a||a instanceof u}var s={}.constructor,r=[].constructor,u="".constructor,v=(!0).constructor,t=(4).constructor,b={};xport("isString",o,b);xport("isBoolean",function(a){return"boolean"===typeof a||a instanceof v},b);xport("isNumber",p,b);xport("isFunction",i,b);xport("isArray",k,b);xport("isObject",m,b);xport("isDefined",l,b);xport("isUndefined",function(a){return void 0===a||null===a},b);xport("typeOf",
g,b);xport("mixin",n,b);xport("adheresTo",function(a,b){var c;if((m(a)||i(a)||k(a))&&(m(b)||i(b)||k(b))){for(c in b)if(b.hasOwnProperty(c))if("*"===b[c]){if(void 0===a[c])return!1}else if(g(a[c])!==g(b[c])&&g(a[c])!==b[c])return!1;return!0}return g(a)===g(b)},b);xport("constructor",{},b);xport("constructor.create",function(){var a=function(){function a(){}return function(b){a.prototype=b;return new a}}();return function(b,c,g){var e,j,d=b,h=c,f=g;0===arguments.length?(h={},d={}):1===arguments.length?
("string"===typeof d?(f=d,h={}):h=d,d={}):2===arguments.length?o(h)&&(f=h,h=d,d={}):3===arguments.length&&(f=l(f)?f.toString():"");f=o(f)&&f.length?f:"UnnamedConstructor";i(d)&&(d=d.prototype);try{e=a(d)}catch(k){e=i(d.constructor)&&m(d.constructor.prototype)?a(d.constructor.prototype):n({},d)}j=function(b){var c=a(j.prototype);arguments.length===1&&b instanceof j&&typeof c.copy==="function"?c.copy(b):typeof c.init==="function"&&(arguments.length?c.init.apply(c,arguments):c.init());return c};j.getName=
function(){return f};n(e,h);j.prototype=e;return e.constructor=j}}(),b);xport.module(b,function(){xport("PURE",b)})})();

/*
 Module: xport
 Author: Darren Schnare
 Keywords: javascript,export
 License: MIT ( http://www.opensource.org/licenses/mit-license.php )
 Repo: https://github.com/dschnare/project-template
*/
(function(){function h(a,b,c){a=a?a.toString():"";c||(c="object"!==typeof window?{}:window);var a=a.split("."),e=a.length,d=c,g,f;for(g=0;g<e-1;g+=1)f=a[g],void 0===d[f]&&(d[f]={}),d=d[f];f=a[e-1];d[f]=b;return c}h("module",function(a,b,c){var e,d;"[object Array]"!=={}.constructor.prototype.toString.call(a)&&(c=b,b=a,a=[],"function"!==typeof b&&(b=function(a){return function(){return a}}(b)));if("function"===typeof define&&"object"===typeof define.a&&define.a)0===a.length?define(b):define(a,b);else if("object"===
typeof exports&&exports&&"function"===typeof require){if(0===a.length)a=b();else{c=[];for(e=a.length;0<e;)e-=1,c.unshift(require(a[e]));a=b.apply(void 0,c)}if(a)for(d in a)a.hasOwnProperty(d)&&(exports[d]=a[d])}else"function"===typeof c&&c()},h);h("xport",h)})();

/*
 Author: Darren Schnare
 Keywords: Keywords: javascript,constructor,inheritence,mixin,pure,type,testing
 License: MIT ( http://www.opensource.org/licenses/mit-license.php )
 Repo: https://github.com/dschnare/purejs
*/
(function(b){function o(a){var r=arguments.length,j,b,c;if(!a)throw Error("Expected at least one object as an argument.");for(j=1;j<r;j+=1)if(c=arguments[j],m(c))for(b in c)c.hasOwnProperty(b)&&(a[b]=c[b]);return a}function f(a){return null===a?"null":l(a)?"array":typeof a}function n(a){return a&&"object"===typeof a}function l(a){return a instanceof s||"[object Array]"===t.prototype.toString.call(a)||m(a)&&q(a.length)&&h(a.push)}function m(a){return null!==a&&void 0!==a}function h(a){return"function"===
typeof a}function q(a){return"number"===typeof a||a instanceof u}function p(a){return"string"===typeof a||a instanceof v}var t={}.constructor,s=[].constructor,v="".constructor,w=(!0).constructor,u=(4).constructor,c={};b("isString",p,c);b("isBoolean",function(a){return"boolean"===typeof a||a instanceof w},c);b("isNumber",q,c);b("isFunction",h,c);b("isArray",l,c);b("isObject",n,c);b("isDefined",m,c);b("isUndefined",function(a){return void 0===a||null===a},c);b("typeOf",f,c);b("mixin",o,c);b("adheresTo",
function(a,c){var b;if((n(a)||h(a)||l(a))&&(n(c)||h(c)||l(c))){for(b in c)if(c.hasOwnProperty(b))if("*"===c[b]){if(void 0===a[b])return!1}else if(f(a[b])!==f(c[b])&&f(a[b])!==c[b])return!1;return!0}return f(a)===f(c)},c);b("constructor",{},c);b("constructor.create",function(){var a=function(){function a(){}return function(c){a.prototype=c;return new a}}();return function(c,b,f){var k,i,d=c,g=b,e=f;0===arguments.length?(g={},d={}):1===arguments.length?("string"===typeof d?(e=d,g={}):g=d,d={}):2===
arguments.length?p(g)&&(e=g,g=d,d={}):3===arguments.length&&(e=m(e)?e.toString():"");e=p(e)&&e.length?e:"UnnamedConstructor";h(d)&&(d=d.prototype);try{k=a(d)}catch(l){k=h(d.constructor)&&n(d.constructor.prototype)?a(d.constructor.prototype):o({},d)}i=function(c){var b=a(i.prototype);arguments.length===1&&c instanceof i&&typeof b.copy==="function"?b.copy(c):typeof b.init==="function"&&(arguments.length?b.init.apply(b,arguments):b.init());return b};i.getName=function(){return e};o(k,g);i.prototype=
k;return k.constructor=i}}(),c);b.module(c,function(){b("PURE",c)})})("function"===typeof xport?xport:void 0);

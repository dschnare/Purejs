(function(){function f(){var a={a:{name:"Ninja",age:300}};a.b=function(a){function c(){}c.prototype=a;return new c}(a.a);a.b.stars=800;a.b.health=1E3;return a}module("Adherence Tests");test("wild card adheresTo test",function(){ok(PURE.adheresTo({age:23},{age:"*"}),'Expect object to adhereTo {age: "*"}.');equal(PURE.adheresTo({age:void 0},{age:"*"}),!1,'Dont expect object to adhereTo {age: "*"}.');ok(PURE.adheresTo({age:null},{age:"*"}),'Expect object to adhereTo {age: "*"}.');ok(PURE.adheresTo({age:{}},
{age:"*"}),'Expect object to adhereTo {age: "*"}.');equal(PURE.adheresTo({},{age:"*"}),!1,'Dont expect object to adhereTo {age: "*"}.')});test("adherence test",function(){ok(PURE.adheresTo({},Object.prototype),"Expect object to adhereTo Object.prototype.");ok(PURE.adheresTo({name:"Darren",age:29},{name:"string",age:"number"}),'Expect object to adhereTo {name: "string", age: "number"}.')});module("Consructor Tests");test("empty constructor test",function(){var a=PURE.constructor.create(),b=new a,c=
a();strictEqual(typeof a,"function","Expect Ctr to be a function.");ok(b instanceof a,"Expect o to be an instance of Ctr.");ok(c instanceof a,"Expect j to be an instance of Ctr.");"function"===typeof Object.prototype.isPrototypeOf&&(ok(a.prototype.isPrototypeOf(b),"Expect Ctr.prototype is a prototype of o."),ok(a.prototype.isPrototypeOf(c),"Expect Ctr.prototype is a prototype of j."));"function"===typeof Object.getPrototypeOf&&(strictEqual(Object.getPrototypeOf(b),a.prototype,"Expect prototype of o is equal to Ctr.prototype."),
strictEqual(Object.getPrototypeOf(c),a.prototype,"Expect prototype of j is equal to Ctr.prototype."));strictEqual(a.getName(),"UnnamedConstructor",'Expect Ctr.getName() equal to "UnnamedConstructor".')});test("simple constructor test",function(){var a=PURE.constructor.create("CTR"),b=new a,c=a();strictEqual(typeof a,"function","Expect Ctr to be a function.");ok(b instanceof a,"Expect o to be an instance of Ctr.");ok(c instanceof a,"Expect j to be an instance of Ctr.");"function"===typeof Object.prototype.isPrototypeOf&&
(ok(a.prototype.isPrototypeOf(b),"Expect Ctr.prototype to be a prototype of o."),ok(a.prototype.isPrototypeOf(c),"Expect Ctr.prototype to be a prototype of j."));"function"===typeof Object.getPrototypeOf&&(strictEqual(Object.getPrototypeOf(b),a.prototype,"Expect prototype of o to be equal to Ctr.prototype."),strictEqual(Object.getPrototypeOf(c),a.prototype,"Expect prototype of j to be equal to Ctr.prototype."));strictEqual(a.getName(),"CTR",'Expect Ctr.getName() equal to "CTR".')});test("copy constructor test",
function(){var a=PURE.constructor.create({copy:function(){this.copyCalled=!0;this.init()},init:function(){this.initCalled=!0},helloWorld:function(){return"Hello World"}},"CTR"),b=new a,c=b.constructor(b);notStrictEqual(b,c,"Don't expect a to be identical to b.");ok(b.initCalled,"a.initCalled to be true.");notEqual(b.copyCalled,!0,"Don't expect a.copyCalled to be true.");ok(c.initCalled,"Expect b.initCalled to be true.");ok(c.copyCalled,"Expect b.copyCalled to be true.");ok(b instanceof a,"Expect a to be an instance of Ctr.");
ok(c instanceof a,"Expect b to be an instance of Ctr.");"function"===typeof Object.prototype.isPrototypeOf&&(ok(a.prototype.isPrototypeOf(b),"Expect Ctr.prototype to be a prototype of a."),ok(a.prototype.isPrototypeOf(c),"Expect Ctr.prototype to be a prototype of b."));"function"===typeof Object.getPrototypeOf&&(strictEqual(Object.getPrototypeOf(b),a.prototype,"Expect prototype of a to be equal to Ctr.prototype."),strictEqual(Object.getPrototypeOf(c),a.prototype,"Expect prototype of b to be equal to Ctr.prototype."));
strictEqual(a.getName(),"CTR",'Expect Ctr.getName() to equal to "CTR".')});test("members test",function(){var a=!1,b=PURE.constructor.create({init:function(){a=!0},helloWorld:function(){return"Hello World"}},"CTR"),c=new b,e=b();strictEqual(typeof b,"function","Expect Ctr to be a function.");ok(c instanceof b,"Expect o to be an instance of Ctr.");ok(e instanceof b,"Expect j to be an instance of Ctr.");"function"===typeof Object.prototype.isPrototypeOf&&(ok(b.prototype.isPrototypeOf(c),"Expect Ctr.prototype is a prototype of o."),
ok(b.prototype.isPrototypeOf(e),"Expect Ctr.prototype is a prototype of j."));"function"===typeof Object.getPrototypeOf&&(strictEqual(Object.getPrototypeOf(c),b.prototype,"Expect prototype of o to be equal to Ctr.prototype."),strictEqual(Object.getPrototypeOf(e),b.prototype,"Expect prototype of j to be equal to Ctr.prototype."));strictEqual(b.getName(),"CTR",'Expect Ctr.getName() to be equal to "CTR".');ok(a,"Expect initCalled to be true.");strictEqual(c.helloWorld(),"Hello World",'Expect o.helloWorld() to be equal to "Hello World".');
ok(PURE.adheresTo(c,b.prototype),"Expect o to adhere to Ctr.prototype.")});test("base members test",function(){var a=!1,b=!1,c=PURE.constructor.create({init:function(b){this.name=b;a=!0},getName:function(){return this.name},helloWorld:function(){return"Hello World"}},"Person"),e=PURE.constructor.create(c,{init:function(a){b=!0;c.prototype.init.call(this,a)},getName:function(){return c.prototype.getName.call(this)+" is a Ninja!"}},"Ninja"),d=e("Darren");ok(d instanceof e,"Expect ninja to be an instance of Ninja.");
ok(d instanceof c,"Expect ninja to be an instance of Person.");"function"===typeof Object.prototype.isPrototypeOf&&(ok(e.prototype.isPrototypeOf(d),"Expect Ninja.prototype to be a prototype of ninja."),ok(c.prototype.isPrototypeOf(d),"Expect Person.prototype to be a prototype of ninja."));"function"===typeof Object.getPrototypeOf&&(strictEqual(Object.getPrototypeOf(d),e.prototype,"Expect prototype of ninja to equal Ninja.prototype."),notStrictEqual(Object.getPrototypeOf(d),c.prototype,"Don't expect prototype of ninja to equal Person.prototype."));
strictEqual(d.getName(),"Darren is a Ninja!",'Expect ninja.getName() t equal "Darren is a Ninja".');strictEqual(e.getName(),"Ninja",'Expect Ninja.getName() tp equal "Ninja".');ok(a,"Expect personInitCalled to be true.");ok(b,"Expect ninjaInitCalled to be true.");strictEqual(d.helloWorld(),"Hello World",'Expect ninja.helloWorld() to equal "Hello World".');strictEqual(d.helloWorld(),"Hello World",'Expect ninja.helloWorld() to equal "Hello World".');ok(PURE.adheresTo(d,e.prototype),"Expect ninja to adhere to Ninja.prototype.");
ok(PURE.adheresTo(d,c.prototype),"Expect ninja to adhere to Person.prototype.")});module("Mixin Tests");test("ownProperty test",function(){var a=f(),b=PURE.mixin({},a.b);strictEqual(b.stars,a.b.stars,"Expect o.stars to equal b.stars.");strictEqual(b.health,a.b.health,"Expect o.health to equal b.health.");notStrictEqual(b.name,a.a.name,"Don't Expect o.name to equal a.name.");notStrictEqual(b.age,a.a.age,"Don't expect o.age to be equal to a.age.")});test("overwrite property test",function(){var a=f(),
b;a.b.age=3500;b=PURE.mixin(a.a,a.b);strictEqual(b.name,a.a.name,"Expect o.name to equal a.name.");strictEqual(b.age,3500,"Expect o.age to equal 3500.")});test("object creation test",function(){var a={},b;strictEqual(typeof a,"object","Expect o to be an object.");b=PURE.mixin(a,{age:45});strictEqual(a,b,"Expect o to be the same object as j.");raises(function(){PURE.mixin()},"Expect PURE.mixin() to throw an error.");raises(function(){PURE.mixin(null,{age:45})},"Expect PURE.mixin(null, {age: 45}) to throw an error.")});
module("Type Testing Tests");test("isString test",function(){ok(PURE.isString("some string literal"),"Expect string literal to be a string.");ok(PURE.isString(new String("some string literal")),"Expect string object to be a string.");equal(PURE.isString(4),!1,"Don't expect number literal to be a string.");equal(PURE.isString(new Number(4)),!1,"Don't expect number object to be a string.");equal(PURE.isString([1,2,3]),!1,"Don't expect array literal to be a string.")});test("isBoolean test",function(){ok(PURE.isBoolean(!0),
"Expect boolean literal to be a boolean.");ok(PURE.isBoolean(new Boolean(!1)),"Expect boolean object to be a boolean.");equal(PURE.isBoolean(4),!1,"Don't expect number literal to be a boolean.");equal(PURE.isBoolean(new Number(4)),!1,"Don't expect number object to be a boolean.");equal(PURE.isBoolean([1,2,3]),!1,"Don't expect array literal to be a boolean.");equal(PURE.isBoolean("true"),!1,"Don't expect string literal to be a boolean.")});test("isNumber test",function(){ok(PURE.isNumber(0),"Expect number literal integer to be a number.");
ok(PURE.isNumber(12.23),"Expect number literal float to be a number.");ok(PURE.isNumber(12E4),"Ex[ect number literal exponent to be a number.");ok(PURE.isNumber(new Number(12.34)),"Expect number object to be a number.");equal(PURE.isNumber([1,2,3]),!1,"Don't expect array literal to be a number.");equal(PURE.isNumber("some string literal"),!1,"Don't expect string literal to be a number.");equal(PURE.isNumber(new String("some string literal")),!1,"Don't expect string object to be a number.")});test("isFunction test",
function(){ok(PURE.isFunction(function(){}),"Expect function literal to be a function.");equal(PURE.isFunction(10),!1,"Don't expect number literal to be a function.");equal(PURE.isFunction("function"),!1,"Don't expect string literal to be a function.");equal(PURE.isFunction(!1),!1,"Don't expect boolean literal to be a function.");equal(PURE.isFunction({}),!1,"Don't expect object literal to be a function.")});test("isArray test",function(){var a=function(){};a.prototype=Array.prototype;a=new a;ok(PURE.isArray([1,
2,3]),"Expect array literal to be an array.");ok(PURE.isArray(Array(3)),"Expect new Array() object to be an array.");ok(PURE.isArray({length:0,push:function(){}}),"Expect array-like object to be an array.");ok(PURE.isArray(a),"Expect extended array object to be an array.");equal(PURE.isArray(33.33),!1,"Don't expect number literal to be an array.");equal(PURE.isArray("some string literal"),!1,"Don't expect string literal to be an array.");equal(PURE.isArray(new String("some string literal")),!1,"Don't expect string object to be an array.")});
test("isObject test",function(){var a=function(){};a.prototype=Array.prototype;a=new a;ok(PURE.isObject({key:"value"}),"Expect object literal to be an object.");ok(PURE.isObject(new Number(4)),"Expect number object to be an object.");ok(PURE.isObject(new String("4")),"Expect string object to be an object.");ok(PURE.isObject(new Boolean(!1)),"Expect boolean object to be an object.");ok(PURE.isObject([1,2,3]),"Expect array literal to be an object.");ok(PURE.isObject(Array(3)),"Expect new Array() object to be an object.");
ok(PURE.isObject(a),"Expect extended array object to be an object.");ok(PURE.isObject({length:0,push:function(){}}),"Expect array-like object to be an object.");equal(PURE.isObject(1),!1,"Don't expect number literal to be an object.");equal(PURE.isObject("1"),!1,"Don't expect string literal to be an object.");equal(PURE.isObject(!1),!1,"Don't expect boolean literal to be an object.")});test("isDefined test",function(){ok(PURE.isDefined("string"),"Expect string literal to be defined.");ok(PURE.isDefined(45),
"Expect number literal to be defined.");ok(PURE.isDefined([2,3,4]),"Expect array literal to be defined.");equal(PURE.isDefined(void 0),!1,"Don't expect undefined to be defined.");equal(PURE.isDefined(null),!1,"Don't expect null to be defined.")});test("isUndefined test",function(){ok(PURE.isUndefined(void 0),"Expect undefined to be undefined.");ok(PURE.isUndefined(null),"Expect null to be undefined.");equal(PURE.isUndefined("string"),!1,"Don't expect string literal to be undefined.");equal(PURE.isUndefined(45),
!1,"Don't expect number literal to be undefined.");equal(PURE.isUndefined([2,3,4]),!1,"Don't expect array literal to be undefined.")});test("typeOf test",function(){strictEqual(PURE.typeOf(34),"number",'Expect number literal to be typeof "number".');strictEqual(PURE.typeOf("string"),"string",'Expect string literal to be typeof "string".');strictEqual(PURE.typeOf(!0),"boolean",'Expect boolean literal to be typeof "boolean".');strictEqual(PURE.typeOf(function(){}),"function",'Expect function literal to be typeof "function".');
strictEqual(PURE.typeOf(new Number(34)),"object",'Expect number object to be typeof "object".');strictEqual(PURE.typeOf(new String("string")),"object",'Expect string object to be typeof "object".');strictEqual(PURE.typeOf(new Boolean(!0)),"object",'Expect boolean object to be typeof "object".');strictEqual(PURE.typeOf(null),"null",'Expect null to be typeof "null".');strictEqual(PURE.typeOf(void 0),"undefined",'Expect undefined to be typeof "undefined".');strictEqual(PURE.typeOf([1,2,3]),"array",'Expect array literal to be typeof "array".')})})();

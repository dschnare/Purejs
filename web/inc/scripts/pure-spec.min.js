(function(){var f=function(){var a=String,b=Number,c=Boolean,d=Array;return{isStringTest:function(){unit.expect("string literal to be a string.",PURE.isString("some string literal"));unit.expect("string object to be a string.",PURE.isString(new a("some string literal")));unit.dontExpect("number literal to be a string.",PURE.isString(4));unit.dontExpect("number object to be a string.",PURE.isString(new b(4)));unit.dontExpect("array literal to be a string.",PURE.isString([1,2,3]))},isBooleanTest:function(){unit.expect("boolean literal to be a boolean.",
PURE.isBoolean(!0));unit.expect("boolean object to be a boolean.",PURE.isBoolean(!1));unit.dontExpect("number literal to be a boolean.",PURE.isBoolean(4));unit.dontExpect("number object to be a boolean.",PURE.isBoolean(new b(4)));unit.dontExpect("array literal to be a boolean.",PURE.isBoolean([1,2,3]));unit.dontExpect("string literal to be a boolean.",PURE.isBoolean("some string literal"))},isNumberTest:function(){unit.expect("number literal integer to be a number.",PURE.isNumber(0));unit.expect("number literal float to be a number.",
PURE.isNumber(12.23));unit.expect("number literal exponent to be a number.",PURE.isNumber(12E4));unit.expect("number object to be a number.",PURE.isNumber(new b(12.34)));unit.dontExpect("array literal to be a number.",PURE.isNumber([1,2,3]));unit.dontExpect("string literal to be a number.",PURE.isNumber("some string literal"));unit.dontExpect("string object to be a number.",PURE.isNumber(new a("some string literal")))},setupIsFunctionTest:function(){var a=function(){};a.prototype=Function.prototype;
this.functionObject=new a},isFunctionTest:function(){unit.expect("function literal to be a function.",PURE.isFunction(function(){}));unit.expect("function property to be a function.",PURE.isFunction(unit.makeTestSuite));unit.dontExpect("function object to be a function.",PURE.isFunction(this.functionObject));unit.dontExpect("number literal to be a function.",PURE.isFunction(10))},destroyIsFunctionTest:function(){delete this.functionObject},setupIsArrayTest:function(){this.arrayLikeObject={length:0,
push:function(){}};var a=function(){};a.prototype=Array.prototype;this.extendedArrayObject=new a},isArrayTest:function(){unit.expect("array literal to be an array.",PURE.isArray([1,2,3]));unit.expect("array object to be an array.",PURE.isArray(new d(3)));unit.expect("array-like object to be an array.",PURE.isArray(this.arrayLikeObject));unit.expect("extended array object to be an array.",PURE.isArray(this.extendedArrayObject));unit.dontExpect("number literal to be an array.",PURE.isArray(33.33));
unit.dontExpect("string literal to be an array.",PURE.isArray("some string literal"));unit.dontExpect("string object to be an array.",PURE.isArray(new a("some string literal")))},destroyIsArrayTest:function(){delete this.arrayLikeObject;delete this.extendedArrayObject},setupIsObjectTest:function(){this.setupIsArrayTest()},isObjectTest:function(){unit.expect("object literal to be an object.",PURE.isObject({key:"value"}));unit.expect("number object to be an object.",PURE.isObject(new b(4)));unit.expect("string object to be an object.",
PURE.isObject(new a("4")));unit.expect("boolean object to be an object.",PURE.isObject(new c(!1)));unit.expect("array literal to be an object.",PURE.isObject([1,2,3]));unit.expect("array object to be an object.",PURE.isObject(new d(3)));unit.expect("extended array object to be an object.",PURE.isObject(this.extendedArrayObject));unit.expect("array-like object to be an object.",PURE.isObject(this.arrayLikeObject));unit.dontExpect("number literal to be an object.",PURE.isObject(1));unit.dontExpect("string literal to be an object.",
PURE.isObject("1"));unit.dontExpect("boolean literal to be an object.",PURE.isObject(!1))},destroyIsObjectTest:function(){this.destroyIsArrayTest()},isDefinedTest:function(){unit.expect("string literal to be defined.",PURE.isDefined("string"));unit.expect("number literal to be defined.",PURE.isDefined(45));unit.expect("array literal to be defined.",PURE.isDefined([2,3,4]));unit.dontExpect("undefined to be defined.",PURE.isDefined(void 0));unit.dontExpect("null to be defined.",PURE.isDefined(null))},
isUndefinedTest:function(){unit.expect("undefined to be undefined.",PURE.isUndefined(void 0));unit.expect("null to be undefined.",PURE.isUndefined(null));unit.dontExpect("string literal to be undefined.",PURE.isUndefined("string"));unit.dontExpect("number literal to be undefined.",PURE.isUndefined(45));unit.dontExpect("array literal to be undefined.",PURE.isUndefined([2,3,4]))},typeOfTest:function(){unit.expect('number literal to be typeof "number".',"number"===PURE.typeOf(34));unit.expect('string literal to be typeof "string".',
"string"===PURE.typeOf("string"));unit.expect('boolean literal to be typeof "boolean".',"boolean"===PURE.typeOf(!0));unit.expect('function literal to be typeof "function".',"function"===PURE.typeOf(function(){}));unit.expect('number object to be typeof "object".',"object"===PURE.typeOf(new b(34)));unit.expect('string object to be typeof "object".',"object"===PURE.typeOf(new a("string")));unit.expect('boolean object to be typeof "object".',"object"===PURE.typeOf(new c(!0)));unit.expect('null to be typeof "null".',
"null"===PURE.typeOf(null));unit.expect('undefined to be typeof "undefined".',"undefined"===PURE.typeOf(void 0));unit.expect('array literal to be typeof "array".',"array"===PURE.typeOf([1,2,3]))}}}();unit.makeTestHarness("Purejs Test Harness","AdheresTo Test Suite",{wildCardAdheresToTest:function(){unit.expect('object to adhereTo {age: "*"}.',PURE.adheresTo({age:23},{age:"*"}));unit.dontExpect('object to adhereTo {age: "*"}.',PURE.adheresTo({age:void 0},{age:"*"}));unit.expect('object to adhereTo {age: "*"}.',
PURE.adheresTo({age:null},{age:"*"}));unit.expect('object to adhereTo {age: "*"}.',PURE.adheresTo({age:{}},{age:"*"}));unit.dontExpect('object to adhereTo {age: "*"}.',PURE.adheresTo({},{age:"*"}))},adherenceTest:function(){unit.expect("object to adhereTo Object.prototype.",PURE.adheresTo({},Object.prototype));unit.expect('object to adhereTo {name: "string", age: "number"}.',PURE.adheresTo({name:"Darren",age:29},{name:"string",age:"number"}))}},"Constructor Test Suite",{emptyConstructorTest:function(){var a=
PURE.constructor.create(),b=new a,c=a();unit.expect("Ctr to be a function.","function"===typeof a);unit.expect("o to be an instance of Ctr.",b instanceof a);unit.expect("j to be an instance of Ctr.",c instanceof a);"function"===typeof Object.prototype.isPrototypeOf&&(unit.expect("Ctr.prototype is a prototype of o.",a.prototype.isPrototypeOf(b)),unit.expect("Ctr.prototype is a prototype of j.",a.prototype.isPrototypeOf(c)));"function"===typeof Object.getPrototypeOf&&(unit.expect("prototype of o is equal to Ctr.prototype.",
Object.getPrototypeOf(b)===a.prototype),unit.expect("prototype of j is equal to Ctr.prototype.",Object.getPrototypeOf(c)===a.prototype));unit.expect('Ctr.getName() equal to "UnnamedConstructor".',"UnnamedConstructor"===a.getName())},simpleConstructorTest:function(){var a=PURE.constructor.create("CTR"),b=new a,c=a();unit.expect("Ctr to be a function.","function"===typeof a);unit.expect("o to be an instance of Ctr.",b instanceof a);unit.expect("j to be an instance of Ctr.",c instanceof a);"function"===
typeof Object.prototype.isPrototypeOf&&(unit.expect("Ctr.prototype is a prototype of o.",a.prototype.isPrototypeOf(b)),unit.expect("Ctr.prototype is a prototype of j.",a.prototype.isPrototypeOf(c)));"function"===typeof Object.getPrototypeOf&&(unit.expect("prototype of o is equal to Ctr.prototype.",Object.getPrototypeOf(b)===a.prototype),unit.expect("prototype of j is equal to Ctr.prototype.",Object.getPrototypeOf(c)===a.prototype));unit.expect('Ctr.getName() equal to "CTR".',"CTR"===a.getName())},
copyConstructorTest:function(){var a=PURE.constructor.create({copy:function(){this.copyCalled=!0;this.init()},init:function(){this.initCalled=!0},helloWorld:function(){return"Hello World"}},"CTR"),b=new a,c=b.constructor(b);unit.dontExpect("a to be identical to b.",b===c);unit.expect("a.initCalled to be true.",!0===b.initCalled);unit.dontExpect("a.copyCalled to be true.",!0===b.copyCalled);unit.expect("b.initCalled to be true.",!0===c.initCalled);unit.expect("b.copyCalled to be true.",!0===c.copyCalled);
unit.expect("a to be an instance of Ctr.",b instanceof a);unit.expect("b to be an instance of Ctr.",c instanceof a);"function"===typeof Object.prototype.isPrototypeOf&&(unit.expect("Ctr.prototype is a prototype of a.",a.prototype.isPrototypeOf(b)),unit.expect("Ctr.prototype is a prototype of b.",a.prototype.isPrototypeOf(c)));"function"===typeof Object.getPrototypeOf&&(unit.expect("prototype of a is equal to Ctr.prototype.",Object.getPrototypeOf(b)===a.prototype),unit.expect("prototype of b is equal to Ctr.prototype.",
Object.getPrototypeOf(c)===a.prototype));unit.expect('Ctr.getName() equal to "CTR".',"CTR"===a.getName())},membersTest:function(){var a=!1,b=PURE.constructor.create({init:function(){a=!0},helloWorld:function(){return"Hello World"}},"CTR"),c=new b,d=b();unit.expect("Ctr to be a function.","function"===typeof b);unit.expect("o to be an instance of Ctr.",c instanceof b);unit.expect("j to be an instance of Ctr.",d instanceof b);"function"===typeof Object.prototype.isPrototypeOf&&(unit.expect("Ctr.prototype is a prototype of o.",
b.prototype.isPrototypeOf(c)),unit.expect("Ctr.prototype is a prototype of j.",b.prototype.isPrototypeOf(d)));"function"===typeof Object.getPrototypeOf&&(unit.expect("prototype of o is equal to Ctr.prototype.",Object.getPrototypeOf(c)===b.prototype),unit.expect("prototype of j is equal to Ctr.prototype.",Object.getPrototypeOf(d)===b.prototype));unit.expect('Ctr.getName() equal to "CTR".',"CTR"===b.getName());unit.expect("initCalled to be true.",a);unit.expect('o.helloWorld() equal to "Hello World".',
"Hello World"===c.helloWorld());unit.expect("o to adhere to Ctr.prototype.",PURE.adheresTo(c,b.prototype))},baseMembersTest:function(){var a=!1,b=!1,c=PURE.constructor.create({init:function(b){this.name=b;a=!0},getName:function(){return this.name},helloWorld:function(){return"Hello World"}},"Person"),d=PURE.constructor.create(c,{init:function(a){b=!0;c.prototype.init.call(this,a)},getName:function(){return c.prototype.getName.call(this)+" is a Ninja!"}},"Ninja"),e=d("Darren");unit.expect("ninja to be an instance of Ninja.",
e instanceof d);unit.expect("ninja to be an instance of Person.",e instanceof c);"function"===typeof Object.prototype.isPrototypeOf&&(unit.expect("Ninja.prototype is a prototype of ninja.",d.prototype.isPrototypeOf(e)),unit.expect("Person.prototype is a prototype of ninja.",c.prototype.isPrototypeOf(e)));"function"===typeof Object.getPrototypeOf&&(unit.expect("prototype of ninja is equal to Ninja.prototype.",Object.getPrototypeOf(e)===d.prototype),unit.dontExpect("prototype of ninja is equal to Person.prototype.",
Object.getPrototypeOf(e)===c.prototype));unit.expect('ninja.getName() equal to "Darren is a Ninja".',"Darren is a Ninja!"===e.getName());unit.expect('Ninja.getName() equal to "Ninja".',"Ninja"===d.getName());unit.expect("personInitCalled to be true.",a);unit.expect("ninjaInitCalled to be true.",b);unit.expect('ninja.helloWorld() equal to "Hello World".',"Hello World"===e.helloWorld());unit.expect('ninja.helloWorld() equal to "Hello World".',"Hello World"===e.helloWorld());unit.expect("ninja to adhere to Ninja.prototype.",
PURE.adheresTo(e,d.prototype));unit.expect("ninja to adhere to Person.prototype.",PURE.adheresTo(e,c.prototype))}},"Mixin Test Suite",{setupOwnPropertyTest:function(){this.a={name:"Ninja",age:300};this.b=function(a){function b(){}b.prototype=a;return new b}(this.a);this.b.stars=800;this.b.health=1E3},ownPropertyTest:function(){var a=PURE.mixin({},this.b);unit.expect("o.stars to be equal to b.stars.",a.stars===this.b.stars);unit.expect("o.health to equal to b.health.",a.health===this.b.health);unit.dontExpect("o.name to be equal to a.name.",
a.name===this.a.name);unit.dontExpect("o.age to be equal to a.age.",a.age===this.a.age)},destroyOwnPropertyTest:function(){delete this.a;delete this.b},setupOverwritePropertyTest:function(){this.setupOwnPropertyTest()},overwritePropertyTest:function(){this.b.age=3500;var a=PURE.mixin(this.a,this.b);unit.expect("o.name to be equal to a.name.",a.name===this.a.name);unit.expect("o.age to be equal to 3500.",3500===a.age)},destroyOverwritePropertyTest:function(){this.destroyOwnPropertyTest()},objectCreationTest:function(){var a=
{},b;unit.expect("o to be an object.","object"===typeof a);b=PURE.mixin(a,{age:45});unit.expect("o to be the same object as j.",a===b);unit.expectToThrow("PURE.mixin() to throw an error.",function(){PURE.mixin()});unit.expectToThrow("PURE.mixin(null, {age: 45}) to throw an error.",function(){PURE.mixin(null,{age:45})})}},"Type Test Suite",f).run()})();
